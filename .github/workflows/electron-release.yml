name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

jobs:
  build_linux:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: set git global safe directory
        run: |
          pacman -Syu git npm flatpak-builder --noconfirm
          git config --global --add safe.directory $(realpath .)

      - uses: actions/checkout@v4
      
      - name: Ensure Flatpak files consistency
        run: |
          # Make sure all Flatpak files use the consistent app ID
          APP_ID=com.xxjsonderuloxx.StreamingServiceLauncher
          for file in flatpak/*.desktop flatpak/*.png; do
            if [[ -f "$file" && ! "$file" =~ "$APP_ID" ]]; then
              NEW_FILE=$(echo $file | sed "s/com\..*\.StreamingServiceLauncher/$APP_ID/")
              cp "$file" "$NEW_FILE"
              echo "Copied $file to $NEW_FILE for consistency"
            fi
          done
      
      - name: Install and Load fuse
        run: |
          pacman -Syu fuse2 fuse3 --noconfirm
          modprobe fuse || echo "Unable to load fuse, ensure it's supported by the host"
      
      - name: Install Flatpak SDK and Dependencies
        run: |
          pacman -S flatpak --noconfirm
          flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak install -y flathub org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08 org.freedesktop.Sdk.Extension.node20//23.08

      - name: build AppImage
        run: |
          npm install
          echo "Building version: $(node -e "console.log(require('./package.json').version)")"
          npm run build -- --linux --publish never
          chmod +x dist/StreamingServiceLauncher_v*_linux.AppImage
        continue-on-error: true
        
      - name: build Flatpak
        run: |
          # Use sandbox=false to avoid FUSE dependency
          flatpak-builder --user --repo=repo --force-clean build-dir flatpak/com.xxjsonderuloxx.StreamingServiceLauncher.json --disable-rofiles-fuse --sandbox=false
          flatpak build-bundle repo StreamingServiceLauncher_v$(node -e "console.log(require('./package.json').version)").flatpak com.xxjsonderuloxx.StreamingServiceLauncher
          chmod +x StreamingServiceLauncher_v*.flatpak
        continue-on-error: true

      - name: show files
        run: |
          echo "AppImage built:"
          ls -la ./dist/StreamingServiceLauncher_v*_linux.AppImage || echo "No AppImage found"
          echo "Flatpak built:"
          ls -la ./StreamingServiceLauncher_v*.flatpak || echo "No Flatpak found"

      - name: Publish AppImage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: StreamingServiceLauncher-AppImage
          path: ./dist/StreamingServiceLauncher_v*_linux.AppImage
          if-no-files-found: warn
          
      - name: Publish Flatpak Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: StreamingServiceLauncher-Flatpak
          path: ./StreamingServiceLauncher_v*.flatpak
          if-no-files-found: warn

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: publish to github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/StreamingServiceLauncher-AppImage/*
            artifacts/StreamingServiceLauncher-Flatpak/*
          tag_name: ${{ github.ref_name }}
          body: |
            StreamingServiceLauncher Release
          draft: true
          generate_release_notes: true
          prerelease: contains(github.ref, 'pre')
        env:
          GITHUB_TOKEN: ${{ github.token }}
